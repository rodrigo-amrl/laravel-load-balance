AWSTemplateFormatVersion: "2010-09-09"

Resources:
  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: laravel-ec2-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole

  InstancePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: laravel-ec2-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Resource: "*"
            Action:
              - s3:*
              - sqs:*
      Roles:
        - !Ref EC2Role

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: laravel-instance-profile
      Roles:
        - !Ref EC2Role

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: laravel-launch-template
      LaunchTemplateData:
        KeyName: applaravel 
        IamInstanceProfile:
          Name: !Ref InstanceProfile
        ImageId: ami-053b0d53c279acc90
        InstanceType: t2.micro
        SecurityGroupIds:
          - !ImportValue laravel-vpc-EC2SecurityGroup

  EC2Instance1:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: !ImportValue laravel-vpc-PublicSubnetOne
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      Tags:
        - Key: Name
          Value: laravel-instance-1

  EC2Instance2:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: !ImportValue laravel-vpc-PublicSubnetTwo
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      Tags:
        - Key: Name
          Value: laravel-instance-2

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Subnets:
        - !ImportValue laravel-vpc-PublicSubnetOne
        - !ImportValue laravel-vpc-PublicSubnetTwo
      SecurityGroups:
        - !ImportValue laravel-vpc-LoadBalancerSecurityGroup

  EC2TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: StagingWebTargetGroup
      Protocol: HTTP
      ProtocolVersion: HTTP1
      Port: 80
      VpcId: !ImportValue laravel-vpc-VPC
      TargetGroupName: laravel-target-group
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 31
      TargetType: instance
      Targets:
        - Id: !Ref EC2Instance1
        - Id: !Ref EC2Instance2
      HealthCheckPath: /
      HealthCheckPort: 80
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 2

  # ALBHttpListener:
  #   Type: AWS::ElasticLoadBalancingV2::Listener
  #   Properties:
  #     LoadBalancerArn: !Ref ApplicationLoadBalancer
  #     Protocol: HTTP
  #     Port: 80
  #     DefaultActions:
  #       - Type: redirect
  #         RedirectConfig:
  #           Protocol: "HTTPS"
  #           Port: 443
  #           Path: "#{path}"
  #           Query: "/#{query}"
  #           Host: "#{host}"
  #           StatusCode: HTTP_301

  # ALBHttpsListener:
  #   Type: AWS::ElasticLoadBalancingV2::Listener
  #   Properties:
  #     LoadBalancerArn: !Ref ApplicationLoadBalancer
  #     Port: 443
  #     Protocol: HTTPS
  #     Certificates:
  #       #need a valid certificate 
  #       - CertificateArn: arn:aws:acm:us-east-1:559293418487:certificate/9b64f53b-75d9-40a2-b1e8-1d6a65fa773e
  #     DefaultActions:
  #       - Type: forward
  #         ForwardConfig:
  #           TargetGroups:
  #             - TargetGroupArn: !Ref EC2TargetGroup
  #               Weight: 1
   

Outputs:
  EC2Instance1PublicIpAdress:
    Value: !GetAtt EC2Instance1.PublicIp
  EC2Instance2PublicIpAdress:
    Value: !GetAtt EC2Instance2.PublicIp
  LoadBalancerDNS:
    Value: !GetAtt ApplicationLoadBalancer.DNSName



